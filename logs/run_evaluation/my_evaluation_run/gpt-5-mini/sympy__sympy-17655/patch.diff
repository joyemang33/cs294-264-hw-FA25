diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
*** Begin Patch
*** Update File: sympy/geometry/point.py
@@
     def __add__(self, other):
-        try:
-            s, o = Point._normalize_dimension(self, Point(other, evaluate=False))
-        except TypeError:
-            raise GeometryError("Don't know how to add {} and a Point object".format(other))
+        # Allow expressions like (scalar * Point) to be added to a Point.
+        # Some sympy expressions represent scalar*Point as a Mul where one
+        # of the args is a Point. In that case, extract the Point factor,
+        # scale its coordinates, and proceed as if we had a Point.
+        from sympy import Mul, simplify, Integer
+        if isinstance(other, Mul):
+            # find a Point factor inside the Mul
+            point_factor = None
+            for a in other.args:
+                if isinstance(a, Point):
+                    point_factor = a
+                    break
+            if point_factor is not None:
+                # product of remaining args is the scalar
+                scalar_args = [a for a in other.args if a is not point_factor]
+                if scalar_args:
+                    scalar = Mul(*scalar_args)
+                else:
+                    # Mul had only the Point (unlikely) â€” treat scalar as 1
+                    scalar = Integer(1)
+                # build a new Point with scaled coordinates and use that as other
+                scaled_coords = [simplify(scalar * c) for c in point_factor.coordinates]
+                other = Point(scaled_coords, evaluate=False)
+
+        try:
+            s, o = Point._normalize_dimension(self, Point(other, evaluate=False))
+        except TypeError:
+            raise GeometryError("Don't know how to add {} and a Point object".format(other))
*** End Patch

No changes detected to generate a patch.
*** Begin Patch
*** Update File: django/core/servers/basehttp.py
@@
 class ThreadedWSGIServer(ThreadingMixIn, WSGIServer):
     """
     A version of WSGIServer that handles each request in a new thread.
     """
+    # Ensure database connections are closed in worker threads after
+    # handling a request to avoid leaking connections that would prevent
+    # the test database from being destroyed (see #22414).
+    def process_request_thread(self, request, client_address):
+        """
+        ThreadingMixIn.process_request_thread runs in the spawned worker
+        thread and is responsible for calling finish_request and
+        shutdown_request. Wrap the superclass implementation so that once
+        the request handling is finished we explicitly close any Django
+        database connections opened in this thread.
+        """
+        try:
+            super().process_request_thread(request, client_address)
+        finally:
+            # Import locally to avoid module-level import cycles during
+            # Django startup.
+            try:
+                from django.db import connections
+            except Exception:
+                # If Django isn't available (very early import stage), don't
+                # attempt to close connections.
+                return
+            # Close any open DB connections on this thread to avoid leaks
+            # that can prevent test database teardown.
+            connections.close_all()
*** End Patch

No changes detected to generate a patch.